#!/usr/bin/env python3
"""
üïµÔ∏è –ó–∞–ø—É—Å–∫ AI-–±–æ—Ç–∞ –®–µ—Ä–ª–æ–∫–∞ –•–æ–ª–º—Å–∞ —Å Ollama

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ AI –º–æ–¥–µ–ª—è–º–∏ —á–µ—Ä–µ–∑ Ollama.
"""

import subprocess
import sys
import os

def check_ollama():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ Ollama"""
    try:
        result = subprocess.run(['ollama', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {result.stdout.strip()}")
            return True
        else:
            print("‚ùå Ollama –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
    except FileNotFoundError:
        print("‚ùå Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        return False

def check_ollama_service():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–µ—Ä–≤–∏—Å Ollama"""
    try:
        result = subprocess.run(['ollama', 'list'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –°–µ—Ä–≤–∏—Å Ollama –∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print("‚ùå –°–µ—Ä–≤–∏—Å Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Ollama: {e}")
        return False

def install_model(model_name="llama2"):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å Ollama"""
    print(f"üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏ {model_name}...")
    try:
        result = subprocess.run(['ollama', 'pull', model_name], capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ –ú–æ–¥–µ–ª—å {model_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ {model_name}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def run_streamlit():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    try:
        subprocess.run([sys.executable, '-m', 'streamlit', 'run', 'streamlit_app_ollama.py'])
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üïµÔ∏è AI-–±–æ—Ç –®–µ—Ä–ª–æ–∫–∞ –•–æ–ª–º—Å–∞ —Å Ollama")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Ollama
    if not check_ollama():
        print("\nüìã –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Ollama:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://ollama.ai")
        print("2. –°–∫–∞—á–∞–π—Ç–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ollama serve")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–∏—Å
    if not check_ollama_service():
        print("\nüîß –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å Ollama:")
        print("ollama serve")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏
    try:
        result = subprocess.run(['ollama', 'list'], capture_output=True, text=True)
        if 'llama2' not in result.stdout:
            print("\nüì• –ú–æ–¥–µ–ª—å llama2 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            install = input("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å llama2? (y/n): ")
            if install.lower() == 'y':
                if not install_model("llama2"):
                    return
            else:
                print("‚ö†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –º–æ–¥–µ–ª—å")
        else:
            print("‚úÖ –ú–æ–¥–µ–ª—å llama2 –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
        return
    
    print("\nüéØ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!")
    print("üìù –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8501")
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    run_streamlit()

if __name__ == "__main__":
    main() 